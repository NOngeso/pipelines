#!/usr/bin/python3
'''
scaffold_0	177878	.	G	A	3.64	.	DP=679;VDB=6.080000e-02;RPB=7.415572e-01;AF1=0.006496;AC1=2;DP4=469,205,1,1;MQ=42;FQ=3.66;PV4=0.52,0.12,1,0.27	GT:PL:DP:SP:GQ	0/0:0,9,102:3:0:30	0/0:0,15,143:5:0:36	0/0:0,0,0:0:0:21	0/0:0,39,255:13:0:60	0/0:0,0,0:0:0:21	0/0:0,42,255:14:0:63	0/0:0,45,255:15:0:66	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,21,165:7:0:42	0/0:0,6,74:2:0:27	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,30,254:10:0:51	0/0:0,6,75:2:0:27	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,6,74:2:0:27	0/0:0,0,0:0:0:21	0/0:0,12,125:4:0:33	0/0:0,9,102:3:0:30	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,18,155:6:0:39	0/0:0,0,0:0:0:21     0/0:0,0,0:0:0:21	0/0:0,3,40:1:0:24	0/0:0,27,183:9:0:48	0/0:0,36,255:12:0:57	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,9,102:3:0:30	0/0:0,21,171:7:0:42	0/0:0,148,255:49:0:99	0/0:0,27,249:9:0:48	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,6,67:2:0:27	0/0:0,24,176:8:0:45	0/0:0,3,40:1:0:24	0/0:0,0,0:0:0:21	0/0:0,9,100:3:0:30   0/0:0,0,0:0:0:21	0/0:0,18,157:6:0:39	0/0:0,0,0:0:0:21	0/0:0,3,41:1:0:24	0/0:0,0,0:0:0:21	0/0:0,6,75:2:0:27	0/0:0,54,255:18:0:75	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,9,101:3:0:30	0/0:0,3,27:1:0:24	0/0:0,18,162:6:0:39	0/0:0,24,232:8:0:45	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,51,255:17:0:72	0/0:0,6,75:2:0:27	0/0:0,0,0:0:0:21	0/0:0,99,255:33:0:99 0/0:0,63,255:21:0:84	0/0:0,3,41:1:0:24	0/0:0,27,254:9:0:48	0/0:0,166,255:55:0:99	0/0:0,30,239:10:0:51	0/0:0,12,142:4:0:33	0/1:50,0,151:7:0:29	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,24,234:8:0:45	0/0:0,30,255:10:0:51	0/0:0,15,142:5:0:36	0/0:0,12,119:4:0:33	0/0:0,15,129:5:0:36	0/0:0,24,241:8:0:45	0/0:0,51,255:17:0:72	0/0:0,33,255:11:0:54	0/0:0,81,255:27:0:99	0/0:0,9,99:3:0:30	0/0:0,123,255:41:0:99	0/0:0,0,0:0:0:21	0/0:0,51,255:17:0:72	0/0:0,93,255:31:0:99	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,9,96:3:0:30	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,18,187:6:0:39	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,12,138:4:0:33  0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,6,75:2:0:27	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,3,37:1:0:24	0/0:0,21,218:7:0:42	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,3,41:1:0:24	0/0:0,6,71:2:0:27	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,3,41:1:0:24	0/0:0,0,0:0:0:21     0/0:0,9,102:3:0:30	0/0:0,3,39:1:0:24	0/0:0,9,101:3:0:30	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,9,102:3:0:30	0/0:0,12,124:4:0:33	0/0:0,9,98:3:0:30	0/0:0,0,0:0:0:21	0/0:0,3,41:1:0:24	0/0:0,0,0:0:0:21	0/0:0,3,40:1:0:24	0/0:0,0,0:0:0:21	0/0:0,9,102:3:0:30	0/0:0,0,0:0:0:21	0/0:0,12,133:4:0:33	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,12,115:4:0:33	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,0,0:0:0:21	0/0:0,12,123:4:0:33	0/0:0,0,0:0:0:21
'''


import sys

n_pop = 190
Outfile = open('all.gt.txt','w')
for line in sys.stdin:
	if line[0] == '#':
		continue
	cell = line.strip().split('\t')
	strS = cell[0]
	strL = cell[1]
	strRef = cell[3]
	strVar = cell[4].split(',')[0]
	strQ = cell[5]
	if 'INDEL' == cell[7][0:5]:
		continue
	infolist = cell[7].split(';')
	dicInfo = dict(zip([x.split('=')[0] for x in infolist],[x.split('=')[1] for x in infolist]))
	keylist = cell[8].split(':')
	GT_list = []
	for acc in cell[9:]:
		vallist = acc.split(':')
		dic = dict(zip(keylist,vallist))
		if int(dic['DP']) > 5:
			if dic['GT'] == '1/1':
				GT = strRef
			elif dic['GT'] == '0/1':
				GT = 'H'
			elif dic['GT'] == '0/0':
				GT = strVar
			else:
				print('!',dic['GT'])
				exit()
		else : 
			GT = 'N'
		GT_list.append(GT)
	#allele = {'A':GT_list.count('A'),'T':GT_list.count('T'),'G':GT_list.count('G'),'C':GT_list.count('C')}
	allele = {}
	if len(GT_list) != n_pop:
		print(line,GT_list)
		exit()
	for each in GT_list:
		if each == 'N':
			continue
		elif each == 'H':
			continue
		else:
			pass
		try:
			allele[each] += 1
		except KeyError:
			allele[each] = 1
	allele_list = list(allele.keys())
	allele_list.sort(key=lambda x:allele[x])
	#print(allele)
	if len(allele_list) < 2:
		continue
	elif GT_list.count('N')/len(GT_list) > 0.2: # percentage of N
		continue
	elif allele[allele_list[0]]/sum(allele.values()) < 0.1: # Minor allele freq
		#print(allele_list[0],allele[allele_list[0]])
		#print(GT_list)
		continue
	else:
		print(strS,strL,strRef,','.join(GT_list),sep='\t',file=Outfile)
